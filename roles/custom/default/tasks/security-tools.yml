---
- name: Wireshark Debconf Configuration
  # Before installing any package, this only sets the preference for the question
  debconf:
    name='wireshark-common'
    question='wireshark-common/install-setuid'
    vtype='boolean'
    value={{wireshark_as_nonsudo | string }}
  become: true
  notify: "{{ (wireshark_as_nonsudo) | ternary ('add_wireshark_as_nonsudo', 'remove_wireshark_as_nonsudo')}}"

- name: Flush handlers to handle wireshark configuration.
  meta: flush_handlers

- name: Update global packages and upgrade
  apt:
    update_cache: true
    upgrade: true
  become: true

- name: Install Security packages with apt.
  apt:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ apt_security_tools }}"
  become: true

- name: Check if Burpsuite is installed.
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/BurpSuitePro/BurpsuitePro"
  register: is_burpsuite_installed

# Install Burpsuite Pro
- name: Download Burpsuite Pro Installation Script and Install.
  when: is_burpsuite_installed.stat.exists == false and burpsuite_pro_state == 'present'
  block:
  - name: Download burpsuite pro installation script.
    ansible.builtin.get_url:
      url: "{{ burpsuite_pro_url }}"
      dest: "{{ ansible_env.HOME }}/Downloads/burp.sh"
    register: getScript

  - name: Install Burpsuite
    ansible.builtin.shell: /usr/bin/bash {{ ansible_env.HOME }}/Downloads/burp.sh
    when: getScript.failed  != true

  - name: Remove Installation Script
    ansible.builtin.file:
      path: "{{ ansible_env.HOME }}/Downloads/burp.sh"
      state: absent

# Remove Burpsuite Pro If Installed
- name: Uninstall Burpsuite if it exists
  ansible.builtin.file:
    state: burpsuite_pro_state
    path: "{{ ansible_env.HOME }}/BurpSuitePro/"
  when: is_burpsuite_installed.stat.exists == true and burpsuite_pro_state == 'absent'